/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gadget;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import util.Node;

/**
 *
 * @author Suthasoma
 */
public class DisplaySolution extends javax.swing.JFrame {

    /**
     * Creates new form DisplaySolution
     */
    public DisplaySolution(Node solution, int timeElapsed, int nVisited, String title) {
        
        initComponents();
        
        this.setTitle("Solution " + title);
        
        this.setIconImage(new ImageIcon("src/icon.image/controller.png").getImage());
        
        JFrame.setDefaultLookAndFeelDecorated(true);
        
        int len = solution.length();
        
        int pathlen = len > 0 ? len - 1 : 0;

        jPanel1.setLayout(new GridBagLayout());
        
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(0, 2, 0, 2);
     
        
        pathLength.setText(pathlen <= 0 ? "0" : pathlen + " nodes");
        elapsedTime.setText(timeElapsed+" ms");
        counterNode.setText(nVisited <= 0 ? "0" : nVisited + " nodes");
        
        gbc.gridx = 0;
        
        gbc.gridy = 0;
        
        int width = solution.getValue().length() > 24 ? 1800 : solution.getValue().length() * 75;
        
        int height = len > 10 ? 12 * 60 : (len + 1) * 60;
       
        
        boolean[][] match = getMatch(solution);
        boolean[][] change = getChange(solution);
        boolean[][] diff = getDiff(solution);
        
        String path[] = new String[len];
        
        for (int i = 0; i < len; i++) {
            path[len-i-1] = solution.getValue();
            solution = solution.getParent();
        }
        
        int con = 0;
        
        while (con < len) {
            gbc.gridy = con;
            jPanel1.add(new LineContainer(path[con],match[con], change[con], diff[con]), gbc);
            con ++;
        }
        
        jPanel1.setSize(new Dimension(width, (len+1)*60));
        
        jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        
        jScrollPane1.setSize(new Dimension(width, height));
        
        
        this.setSize(jScrollPane1.getSize());
    }
    
    private static boolean[][] getMatch(Node solution) {
        
        int length = solution.length();
        boolean[][] val = new boolean[length][solution.getValue().length()];
        
        String[] path = new String[length];
        
        for (int i = 0; i < length; i++) {
            path[length-1-i] = solution.getValue();
            solution = solution.getParent();
        }
        
        for (int i = 0; i < length; i++) {
            for (int j = 0; j < path[i].length(); j++) {
                if (path[i].charAt(j) == path[length-1].charAt(j)) {
                    val[i][j] = true;
                }
            }
        }
        
        return val;
    }
    
    private static boolean[][] getChange(Node solution) {
        
        int length = solution.length();
        boolean[][] val = new boolean[length][solution.getValue().length()];
        
        String[] path = new String[length];
        
        for (int i = 0; i < length; i++) {
            path[length-1-i] = solution.getValue();
            solution = solution.getParent();
        }
        
        for (int i = 0; i < length-1; i++) {
            for (int j = 0; j < path[i].length(); j++) {
                if (path[i].charAt(j) != path[i+1].charAt(j)) {
                    val[i][j] = true;
                    break;
                }
            }
        }
        
        return val;
    }
    
    private static boolean[][] getDiff(Node solution) {
        
        int length = solution.length();
        boolean[][] val = new boolean[length][solution.getValue().length()];
        
        String[] path = new String[length];
        
        for (int i = 0; i < length; i++) {
            path[length-1-i] = solution.getValue();
            solution = solution.getParent();
        }
        
        for (int i = 1; i < length; i++) {
            for (int j = 0; j < path[i].length(); j++) {
                if (path[i].charAt(j) != path[i-1].charAt(j)) {
                    val[i][j] = true;
                }
            }
        }
        
        return val;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lengthLabel = new javax.swing.JLabel();
        elapsedTimeLabel = new javax.swing.JLabel();
        visitedNodeLabel = new javax.swing.JLabel();
        pathLength = new javax.swing.JLabel();
        elapsedTime = new javax.swing.JLabel();
        counterNode = new javax.swing.JLabel();

        setTitle("Solusi ");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(0, 51, 51));
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(200, 40));

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setForeground(new java.awt.Color(0, 51, 51));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 406, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 365, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel1);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        lengthLabel.setForeground(new java.awt.Color(204, 255, 255));
        lengthLabel.setText("Path length:");

        elapsedTimeLabel.setForeground(new java.awt.Color(204, 255, 255));
        elapsedTimeLabel.setText("Time elapsed:");

        visitedNodeLabel.setForeground(new java.awt.Color(204, 255, 255));
        visitedNodeLabel.setText("Visited node:");

        pathLength.setForeground(new java.awt.Color(255, 102, 102));
        pathLength.setText("jLabel1");

        elapsedTime.setForeground(new java.awt.Color(255, 102, 102));
        elapsedTime.setText("jLabel2");

        counterNode.setForeground(new java.awt.Color(255, 102, 102));
        counterNode.setText("jLabel3");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lengthLabel)
                    .addComponent(elapsedTimeLabel)
                    .addComponent(visitedNodeLabel))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pathLength)
                    .addComponent(elapsedTime)
                    .addComponent(counterNode))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lengthLabel)
                    .addComponent(pathLength))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elapsedTimeLabel)
                    .addComponent(elapsedTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(visitedNodeLabel)
                    .addComponent(counterNode))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel counterNode;
    private javax.swing.JLabel elapsedTime;
    private javax.swing.JLabel elapsedTimeLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lengthLabel;
    private javax.swing.JLabel pathLength;
    private javax.swing.JLabel visitedNodeLabel;
    // End of variables declaration//GEN-END:variables
}
